name: Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:${{ github.ref_name }}
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.repository }}:${{ github.ref_name }}
      - name: Build wheel
        run: |
          python -m pip install --upgrade pip build
          python -m build -w
      - name: Generate release notes
        run: python scripts/generate_release_notes.py --output release_notes.md
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          files: dist/*
          body_path: release_notes.md
  staging:
    needs: release
    runs-on: ubuntu-latest
    steps:
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Run container
        run: |
          docker run -d --name dx0-test -p 8000:8000 ghcr.io/${{ github.repository }}:${{ github.ref_name }} \
            uvicorn sdb.ui.app:app --host 0.0.0.0 --port 8000
          sleep 10
      - name: Health check
        run: curl -f http://localhost:8000/docs > /dev/null
      - name: Show logs
        if: always()
        run: docker logs dx0-test
      - name: Cleanup
        if: always()
        run: docker rm -f dx0-test
