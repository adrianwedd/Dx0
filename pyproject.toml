[build-system]
requires = ["setuptools>=61", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "sdb"
version = "0.4.0"
description = "Sequential diagnosis benchmark and demo orchestrator"
authors = [{name = "MAI", email = "maintainers@example.com"}]
readme = "README.md"
requires-python = ">=3.10"
license = {file = "LICENSE"}
keywords = ["diagnosis", "benchmark", "medical ai"]
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Intended Audience :: Developers",
    "Development Status :: 3 - Alpha",
]
dependencies = [
    "fastapi",
    "uvicorn",
    "prometheus_client",
    "numpy>=1.26.4",
    "sentence-transformers",
    "structlog",
    "filelock",
    "pydantic>=2.11",
    "PyJWT>=2.8",
]

[project.urls]
Homepage = "https://github.com/mai-dxo/dx0"
Repository = "https://github.com/mai-dxo/dx0"

[project.optional-dependencies]
cli = ["httpx"]
sentry = ["sentry-sdk"]

[project.scripts]
sdb-cli = "cli:main"

[tool.setuptools]
packages = [
    "sdb",
    "sdb.ingest",
    "sdb.ui",
    "sdb.plugins",
    "sdb.services",
]
py-modules = ["cli"]
include-package-data = true

[project.entry-points."dx0.personas"]
optimist = "sdb.plugins.optimist_plugin:optimistic_chain"

[project.entry-points."sdb.retrieval_plugins"]
sentence-transformer = "sdb.retrieval:SentenceTransformerIndex"
faiss = "sdb.retrieval:FaissIndex"

[project.entry-points."dx0.cost_estimators"]
csv = "sdb.cost_estimator:load_csv_estimator"

[tool.pytest.ini_options]
asyncio_mode = "auto"
markers = [
    "asyncio: mark test as async",
]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = [
    "-v",
    "--tb=short",
    "--strict-markers",
]
